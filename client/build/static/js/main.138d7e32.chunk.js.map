{"version":3,"sources":["config.js","api/index.js","store/actions/auth.js","store/actions/actionTypes.js","utils/setAuthToken.js","store/actions/index.js","App.js","store/utility.js","store/reducers/auth.js","store.js","index.js"],"names":["exports","PORT","process","CLIENT_ORIGIN","registerurl","loginurl","confirmationTokenurl","resetPasswordurl","confirmRestTokenurl","PasswordChangeurl","fetchProjectsUrl","logout","localStorage","removeItem","type","actionTypes","checkAuthTimeout","expirationTime","dispatch","setTimeout","authCheckState","token","getItem","console","log","expirationDate","Date","_id","authSuccess","getTime","register","registerDetails","a","urls","axios","post","response","data","success","msg","loginFormDetails","user","error","login","loginDetails","expiresIn","setItem","authLoginSuccessAlert","defaults","headers","common","setAuthToken","authLoginSuccess","loginFail","loginError","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_ERRORNULL","AUTH_REGISTER_SUCCESS","AUTH_LOGIN_PAGE","AUTH_LOGIN_FAIL","AUTH_LOGIN_SUCCESS","AUTH_LOGOUT","AUTH_LOGIN_SUCCESS_ALERT","Project","React","lazy","Register","Login","NotFound","loading","className","App","this","props","onTryAutoSignup","routes","fallback","exact","path","component","name","to","isAuthenticated","Component","withRouter","connect","state","auth","tokenValue","actions","updateObject","oldObject","updatedProperties","initialState","registerSuccess","loginSuccess","registerError","authStart","action","authRegisterSuccess","idToken","authLoginPage","authFail","authErrorChange","authLogout","authLoginFail","authLoginSuccessful","reducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","persistConfig","key","storage","whitelist","store","persistReducer","createStore","applyMiddleware","thunk","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.138d7e32.chunk.js","sourcesContent":["exports.PORT = process.env.PORT || 8080\n\nexports.CLIENT_ORIGIN = process.env.NODE_ENV === 'production' \n  ? process.env.CLIENT_ORIGIN\n  : 'https://rian-appnew.herokuapp.com'\n","\n\n// CLIENT ORIGIN\nimport { CLIENT_ORIGIN } from \"../config\"\n\n// Auth\nexport const registerurl = `${CLIENT_ORIGIN}/access/register`;\nexport const loginurl = `${CLIENT_ORIGIN}/access/login`;\nexport const confirmationTokenurl = `${CLIENT_ORIGIN}/access/tokenConfirm`;\nexport const resetPasswordurl = `${CLIENT_ORIGIN}/access/resetPassword`;\nexport const confirmRestTokenurl = `${CLIENT_ORIGIN}/access/confirmResetToken`;\nexport const PasswordChangeurl = `${CLIENT_ORIGIN}/access/passwordChange`;\n\n// Project\nexport const fetchProjectsUrl = `${CLIENT_ORIGIN}/project/fetchProjects`;\nexport const createProjectUrl = `${CLIENT_ORIGIN}/project/createProject`;\nexport const deleteProjectUrl = `${CLIENT_ORIGIN}/project/deleteProject`;\nexport const updateProjectUrl = `${CLIENT_ORIGIN}/project/updateProject`","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nimport * as urls from \"../../api/index\";\nimport setAuthToken from '../../utils/setAuthToken';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, _id) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        _id: _id\n    };\n};\n\nexport const authRegisterSuccess = (success) => {\n    return {\n        type: actionTypes.AUTH_REGISTER_SUCCESS,\n        success: success\n    }\n};\n\nexport const authLoginPage = (loginFormDetails) => {\n    return {\n        type: actionTypes.AUTH_LOGIN_PAGE,\n        loginFormDetails: loginFormDetails\n    }\n}\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n}\n\nexport const logout = () => {\n    \n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('_id');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\n\nexport const authsignout = () => {\n    return dispatch => {\n        dispatch(logout());\n    }\n}\n\nexport const checkAuthTimeout = (expirationTime) => {\n    return dispatch => {\n        setTimeout(() => {\n            // dispatch(logout());\n            dispatch(logout())\n        }, expirationTime * 1000);\n    };\n};\n\nexport const authCheckState = () => {\n    \n    return dispatch => {\n       \n        const token = localStorage.getItem('token');\n        console.log(token)\n        if (!token) {\n            dispatch( logout());\n        } else {\n            \n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if (expirationDate <= new Date()) {\n                dispatch(logout());\n            } else {\n                // setAuthToken(token);\n                const _id = localStorage.getItem('_id');\n                console.log(_id)\n                dispatch(authSuccess(token, _id));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000 ));\n            }   \n        }\n    };\n};\n\nexport const errorToNull  = () => {\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\nexport const setErrorToNull = () => {\n    return dispatch => {\n        dispatch(errorToNull)\n    }\n}\n\nexport const register = (registerDetails) => {\n   \n    return async dispatch => {\n        console.log(urls.registerurl)\n        try {\n            console.log(\"here\")\n            let response = await axios.post(urls.registerurl, registerDetails)\n            console.log(response)\n            if (response.data.success = true) {\n                dispatch(authRegisterSuccess(response.data.msg))\n                dispatch(authLoginPage(response.data.user))\n            }\n\n        } catch (error) {\n            dispatch(authFail(error.response.data.msg + `-${new Date().getTime()}`))\n        }\n\n    }\n}\n\n\nexport const confirmTokens = (token) =>  {\n    \n        return async dispatch => {\n            \n            let bypass = token;\n            let response = await axios.post(urls.confirmationTokenurl, bypass)\n            return response;\n\n        }\n        \n}\n\nexport const resetPassword = (resetDetails) => {\n    \n    return async dispatch =>{\n \n        // console.log(resetDetails)\n        let response = await axios.post(urls.resetPasswordurl, resetDetails)\n        \n        console.log(response)\n        return response;\n    }\n\n}\n\nexport const confirmResetToken = (resetToken) => {\n    \n    return async dispatch => {\n\n        let response = await axios.post(urls.confirmRestTokenurl, resetToken)\n\n        console.log(response);\n        return response\n    }\n}\n \nexport const PasswordChange = (passwordData) => {\n    return async dispatch => {\n\n        let response = await axios.post(urls.PasswordChangeurl, passwordData)\n        console.log(response);\n        return response\n    }\n}\n\nexport const LoginErrorToNull = () => {\n\n    return dispatch => {\n        dispatch(LoginErrorToNull)\n    }\n}\n\nexport const login = (loginDetails) => {\n    return async dispatch => {\n        try {\n            let response = await axios.post(urls.loginurl, loginDetails)\n            \n            if (response.data.success = true) {\n\n                const expirationDate= new Date(new Date().getTime() + response.data.expiresIn * 1000);\n                localStorage.setItem('token', response.data.token);\n                localStorage.setItem('expirationDate', expirationDate );\n                localStorage.setItem('_id', response.data.user._id); \n                \n               dispatch(authLoginSuccessAlert(response.data.msg)) \n\n                setTimeout(() => {\n                    axios.defaults.headers.common['Authorization'] = response.data.token;\n                    //  console.log(response.data.token)\n                setAuthToken(response.data.token);\n                dispatch(authLoginSuccess(response.data.token, response.data.user._id))\n                dispatch(checkAuthTimeout(response.data.expiresIn));\n\n                }, 5000)\n                \n                 \n            }\n        } catch (err) {\n            let error = 'Something went wrong'\n            dispatch(loginFail(error + `-${new Date().getTime()}`))\n        }\n    }\n}\n\nexport const authLoginSuccess = (token, _id, msg) => {\n    return {\n\n        type: actionTypes.AUTH_LOGIN_SUCCESS,\n        token: token,\n        _id: _id, \n        msg: msg\n\n    }\n}\n\nexport const authLoginSuccessAlert = (msg) => {\n    return {\n        type: actionTypes.AUTH_LOGIN_SUCCESS_ALERT,\n        msg: msg\n    }\n}\n\nexport const loginFail = (loginError) => {\n    return {\n        type: actionTypes.AUTH_LOGIN_FAIL,\n        loginError: loginError\n    }\n}\n\nexport const setLoginErrorToNull = () => {\n    return dispatch => {\n        dispatch(LoginErrorToNull)\n    }\n}","// Auth Action Types\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n// export const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_ERRORNULL = 'AUTH_ERRORNULL';\nexport const AUTH_REGISTER_SUCCESS = 'AUTH_REGISTER_SUCCESS';\nexport const AUTH_LOGIN_PAGE = 'AUTH_LOGIN_PAGE';\nexport const AUTH_LOGIN_FAIL = 'AUTH_LOGIN_FAIL';\nexport const AUTH_LOGIN_SUCCESS = \"AUTH_LOGIN_SUCCESS\"\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_LOGIN_SUCCESS_ALERT = 'AUTH_LOGIN_SUCCESS_ALERT'","import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    //Apply to every request\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete Auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","export {\n    authCheckState,\n    login, register, \n    logout\n    \n} from './auth'\n\nexport {\n    fetchProjects\n} from './project'","import React, { Component, Suspense } from 'react';\nimport { Route, Switch, withRouter, Redirect, BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from \"./store/actions/index\";\nimport setAuthToken from './utils/setAuthToken'\n\nconst Project = React.lazy(() => import (\"./views/Project/Project\"));\nconst Register = React.lazy(() => import(\"./views/Register/Register\"));\nconst Login = React.lazy(() => import(\"./views/Login/Login\"));\nconst NotFound = React.lazy(() => import(\"./views/NotFound/NotFound\"));\n// const Welcome = React.lazy(() => import (\"./views/Welcome/Welcome\"));\nconst loading = () => <div className='animated fadeIn pt-3 text-center'>Loading...</div>;\n\nclass App extends Component { \n  componentDidMount () {\n    console.log('Try am')\n     this.props.onTryAutoSignup(); \n  }\n\n  render () {\n    let routes = (\n      <Suspense fallback={loading()}>\n        <Switch>\n          <Route exact path='/register' component={Register}/>\n          <Route exact path='/login' name='Login' component={Login}/>\n          <Redirect to=\"/login\" />\n          <Route exact path='/*' name='' component={NotFound}/>\n        </Switch>\n      </Suspense>\n    );\n      console.log(this.props.isAuthenticated)\n    if ( this.props.isAuthenticated ) {\n      routes = (\n        <Suspense fallback={loading()}>\n          <Switch>\n          <Route path='/project' name='Project' component={Project} />\n          <Redirect to=\"/project\" />\n          </Switch>\n        </Suspense>\n      );\n     }\n\n     return (\n       <div>\n         {routes}\n       </div>\n     )\n  }\n \n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    // isAuthenticated: state.auth.token,\n    tokenValue: state.auth.token\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() ),\n  };\n};\n\nexport default withRouter( connect( mapStateToProps, mapDispatchToProps )( App ) );\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};","import * as actionTypes from \"../actions/actionTypes\"\nimport { authLoginSuccess } from \"../actions/auth\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    token: null,\n    _id: null,\n    loading: false,\n    error: null,\n    success: null,\n    registerSuccess: null,\n    loginFormDetails: null,\n    loginError: null,\n    loginSuccess: null,\n    registerError: null\n    // emailTokenStatus: null\n}\n\nconst authStart = (state, action) => {\n    return updateObject( state, { error: null, loading: true } );\n}\n\nconst authRegisterSuccess = (state, action ) => {\n    return updateObject(\n         state, { registerSuccess: action.success, loading: true } );\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject( state, { \n        token: action.idToken,\n        _id: action._id,\n        error: null,\n        loading: false\n     } );\n}\n\nconst authLoginPage = (state, action ) => {\n    console.log()\n    return updateObject(\n        state, { loginFormDetails: action.loginFormDetails\n    })\n}\n \nconst authFail = (state, action) => {\n    console.log(action.error)\n    console.log(state.registerError)\n    return updateObject( state, {\n        registerError: action.error,\n        loading: false\n    });\n}\n\nconst authErrorChange = (state, action) => {\n    return updateObject( state, {\n        error: ''\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, { token: null, _id: null, loginSuccess: null });\n}\n \nconst authLoginFail = (state, action) => {\n    return updateObject(state, {\n        loginError: action.loginError\n    })\n}\n\nconst authLoginSuccessful = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        _id: action._id,\n        // loginSuccess: action.msg\n        \n    })\n}\n\nconst authLoginSuccessAlert = (state, action) => {\n    return updateObject(state, {\n        loginSuccess: action.msg\n    })\n}\n\nconst reducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case actionTypes.AUTH_REGISTER_SUCCESS: return authRegisterSuccess(state, action);\n        case actionTypes.AUTH_ERRORNULL: return authErrorChange(state, action);\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.AUTH_LOGIN_PAGE: return authLoginPage(state, action);\n        case actionTypes.AUTH_LOGIN_FAIL: return authLoginFail(state, action);\n        case actionTypes.AUTH_LOGIN_SUCCESS: return authLoginSuccessful(state, action);\n        case actionTypes.AUTH_LOGIN_SUCCESS_ALERT: return authLoginSuccessAlert(state, action);\n        default: \n        return state;\n    }\n};\n\nexport default reducer;","import { createStore, applyMiddleware, compose,  combineReducers } from \"redux\";\n// import throttle from 'lodash.throttle';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport auth from \"./store/reducers/auth\"\nimport thunk from 'redux-thunk';\n// import storage from 'redux-persist/lib/storage';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst rootReducer = combineReducers({\n    auth\n})\n\nconst persistConfig = {\n    key: 'auth',\n    storage: storage,\n    whitelist: ['auth'] // which reducer want to store\n  };\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n  \nconst persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {Provider} from 'react-redux'\n\n// const store = createStore(\n//     rootReducer,\n//     window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() \n// )\n\n// const persistor = persistStore(store);\n\nReactDOM.render(\n<React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n    ,\n  </React.StrictMode>,\ndocument.getElementById('root')\n);\n\n\n"],"sourceRoot":""}